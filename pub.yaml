# the meta information
---
venues:
  SICOMP: SIAM Journal on Computing
  SODA: ACM-SIAM Symposium on Discrete Algorithms
  SOSA: Symposium on Simplicity in Algorithms
  ESA: European Symposium on Algorithms
  IPL: Information Processing Letters
  ORL: Operations Research Letters
  MP: Mathematical Programming
  APPROX: International Workshop on Approximation Algorithms for Combinatorial Optimization Problems
  EJOR: European Journal of Operational Research
  TALG: ACM Transactions on Algorithms
  Congr. Numer.: Congressus Numerantium
  SIDMA: SIAM Journal on Discrete Mathematics
  RANDOM: International Conference on Randomization and Computation
  MFCS: International Symposium on Mathematical Foundations of Computer Science
  NeurIPS: Conference on Neural Information Processing Systems
  FSTTCS: Foundations of Software Technology and Theoretical Computer Science
  COCOON: International Computing and Combinatorics Conference
  IPCO: Conference on Integer Programming and Combinatorial Optimization
  IJTCS-FAW: International Joint Conference on Theoretical Computer Science – Frontier of Algorithmic Wisdom

people:
  Chao Xu: https://chaoxu.prof
  Kristóf Bérczi: https://berkri.web.elte.hu/
  Ken-ichi Kawarabayashi: http://research.nii.ac.jp/~k_keniti/
  Bin Cao: https://scholar.google.com/citations?user=4DRkxEoAAAAJ&hl=en
  Amir Gharehgozli: https://www.csun.edu/som/amir-gharehgozli
  Wenda Zhang: https://www.linkedin.com/in/wenda-zhang-a5359a36/
  Yichen Yang:
  Ke Shi: https://keshi.pro/
  Yuhao Liu: https://yhliu126.github.io/
  Tsuyoshi Hirayama:
  Kazuhisa Makino: https://www.kurims.kyoto-u.ac.jp/en/list/makino.html
  Qian Zhang: http://qianzhang.me/
  Chandra Chekuri: http://chekuri.cs.illinois.edu/
  Kent Quanrud: https://kentquanrud.com/
  Karthekeyan Chandrasekaran: http://karthik.ise.illinois.edu/
  Xilin Yu: http://xilinyu2.web.engr.illinois.edu/
  Tamás Király: http://www.cs.elte.hu/~tkiraly/
  Euiwoong Lee: http://www.cs.cmu.edu/~euiwoonl/
  Konstantinos Koiliaris: https://koiliaris.com/
  Thapanapong Rukkanchanunt: https://www2.cs.science.cmu.ac.th/staff/THAPANAPONG/doku.php
  Jeff Erickson: http://jeffe.cs.illinois.edu/
  Hsien-Chih Chang: https://users.cs.duke.edu/~hc252/
  Neil J. Calkin: https://www.math.clemson.edu/~calkin/
  Janine E. Janoski:
  Allison Nelson:
  Sydney Ryan:
  Calvin Beideman: https://www.calvinbeideman.com/
  Jingyang Zhao: https://scholar.google.com/citations?user=s55SLpgAAAAJ&hl=en
  Mingyu Xiao: https://sites.google.com/site/myxiao/
  Steven Skiena: https://www3.cs.stonybrook.edu/~skiena/
  Boris Aronov: https://engineering.nyu.edu/faculty/boris-aronov
  Peng Yu: https://yupbank.github.io/
  Albert Bifet: https://albertbifet.com/
  Jesse Read: https://jmread.github.io/
  Jianbo Wang: https://wangchienbo.github.io/
  Siyun Zhou: https://lazykko.github.io/
  Siyue Liu: https://www.cmu.edu/tepper/programs/phd/program/student-profiles/phd-student-liu-siyue.html
  Dongyu Lv:
  Yizhi Song: https://www.linkedin.com/in/yizhi-song-24784312b/

types:
  conference: Conference Publications
  journal : Journal Publications
  manuscript: <span>Manuscripts<br /><span style="font-size:0.6em"><em>Some manuscripts are available upon request.</em></span></span> 
  thesis: Thesis
  
# id: the unique identifier
# title: title of the article
# authors: a list of authors
# type: conference, journal, manuscript or thesis
# pub: abbreviation of the conference name or publication
# year: the publication year
# bib: this overloads everything to show as the bibliography line
# show: d means document, p means presentation, a means abstract
# notes: a list of notes
# dedication: a dedication, appends to the abstract
# abstract: the abstract of the paper

# For conferences and journals, the default bib line is
# pub + year
# bib allow user to add extra information




# conference publications
---
id: cyclic-cover
title: Almost optimum $\ell$-covering of $\Z_n$
type: manuscript
show: [d]
year: 2024
bib: COCOON 2024 (To appear)
authors: [Ke Shi, Chao Xu]
abstract: >
  A subset $B$ of the ring $\Z_n$ is referred to as a $\ell$-covering set if
  $\{ ab \pmod n \mid 0\leq a \leq \ell, b\in B\} = \Z_n$.
  We show that there exists a $\ell$-covering set of $\Z_n$ of
  size $O(\frac{n}{\ell}\log n)$ for all $n$ and $\ell$, and how to construct
  such a set.
  We also provide examples where any $\ell$-covering set must have a size of
  $\Omega(\frac{n}{\ell}\frac{\log n}{\log \log n})$. The proof employs a
  refined bound for the relative totient function obtained through sieve theory
  and the existence of a large divisor with a linear divisor sum. The result
  can be used to simplify a modular subset sum algorithm. 

---
id: nested-ticketing
title: Nested and Interlaced Ticketing for Multiple Travelers
type: conference
show: [d]
year: 2024
bib: IJTCS-FAW 2024 (To appear)
authors: [Dongyu Lv, Yizhi Song, Chao Xu]
abstract: >
  Nested ticketing represents a prevalent practice in airline bookings, employed to bypass 
  certain airline ticketing regulations with the aim of reducing costs on multiple round-trip 
  tickets.
  We consider the computational complexity of nested ticketing, and it is 'covert' version,
  which we call interleaved ticketing. 
  Consider multiple agents living in different locations and a single client who demands
  that one agent be present each week. The objective for the company is to schedule these
  agents and arrange their flight itineraries to minimize the cost. 
  We show that when nested ticketing is allowed, the problem is NP-hard when there are at
  least two agents. We also show there exists a polynomial-time algorithm if only interleaved
  ticketing is allowed, and the number of airlines is bounded.
---
id: matroid-congruency-constraint
title: On the Congruency-Constrained Matroid Base
type: conference
show: [d]
selected: true
year: 2024
bib: IPCO 2024 (To appear)
authors: [Siyue Liu, Chao Xu]
abstract: >
  Consider a matroid where all elements are labeled with an element in $\mathbb{Z}$.
  We are interested in finding a base where the sum of the labels is congruent to
  $g \pmod m$. We show that this problem can be solved in $\tilde{O}(2^{4m} n r^{5/6})$
  time for a matroid with $n$ elements and rank $r$, when $m$ is either the product of
  two primes or a prime power. The algorithm can be generalized to all moduli and,
  in fact, to all abelian groups if a classic additive combinatorics conjecture
  by Schrijver and Seymour holds true. We also discuss the optimization version
  of the problem.
---
id: zeroforcing
show: [d]
title: Solving systems of linear equations through zero forcing sets
authors: [Jianbo Wang, Chao Xu, Siyun Zhou]
type: conference
year: 2023
pub: COCOON
abstract: >
  Let $\mathbb{F}$ be any field, we consider solving $Ax=b$ for a matrix $A\in\mathbb{F}^{n\times n}$
  of $m$ non-zero elements and $b\in\mathbb{F}^{n}$. If we are given a zero forcing set of $A$ of size
  $k$, we can solve the linear equation in $O(mk+k^\omega)$ time, where $\omega$ is the matrix
  multiplication exponent. As an application, we show how the lights out game in an $n\times n$
  grid is solved in $O(n^3)$ time, and then improve the running time to $O(n^\omega\log n)$ by
  exploiting the repeated structure in grids.
---
id: sub4part
show: [d,p]
title: A Polynomial Time Algorithm for Finding a Minimum 4-Partition of a Submodular Function
authors: [Tsuyoshi Hirayama, Yuhao Liu, Kazuhisa Makino, Ke Shi, Chao Xu]
type: conference
year: 2023
pub: SODA
abstract: >
  In this paper, we study the minimum $k$-partition problem of submodular functions, i.e., 
  given a finite set $V$ and a submodular function $f:2^V\to \R$,  
  computing a $k$-partition $ \{ V_1, \ldots, V_k \}$ of $V$ 
  with minimum $\sum_{i=1}^k f(V_i)$.  
  The problem is a natural generalization of the minimum $k$-cut problem in graphs and hypergraphs. 
  It is known that the problem is NP-hard for general $k$, and solvable in polynomial time for $k \leq 3$.  
  In this paper, we construct the first polynomial-time algorithm for the minimum $4$-partition problem.

---
id: lineartreeshap
show: [d]
title: Linear TreeShap
authors: [Peng Yu, Chao Xu, Albert Bifet, Jesse Read]
type: conference
year: 2022
pub: NeurIPS
notes:
  - Selected as Oral.
abstract: >
  Decision trees are well-known due to their ease of interpretability.
  To improve accuracy, we need to grow deep trees or ensembles of trees.
  These are hard to interpret, offsetting their original benefits. 
  Shapley values have recently become a popular way to explain the predictions of tree-based machine learning models. 
  It provides a linear weighting to features independent of the tree structure. 
  The rise in popularity is mainly due to TreeShap, which solves a general exponential complexity problem in polynomial time. 
  Following extensive adoption in the industry, more efficient algorithms are required. 
  This paper presents a more efficient and straightforward algorithm: Linear TreeShap.
  Like TreeShap, Linear TreeShap is exact and requires the same amount of memory.

---
id: approxbyhypergraph
show: []
title: Approximate Representation of Symmetric Submodular Functions via Hypergraph Cut Functions
authors: [Calvin Beideman, Karthekeyan Chandrasekaran, Chandra Chekuri, Chao Xu]
type: conference
year: 2022
pub: FSTTCS
abstract: >
  Submodular functions are fundamental to combinatorial optimization. Many interesting problems can be formulated as special cases of problems involving submodular functions. 
  In this work, we consider the problem of approximating symmetric submodular functions everywhere using hypergraph cut functions. 
  Devanur, Dughmi, Schwartz, Sharma, and Singh showed that symmetric submodular functions over $n$-element ground sets 
  cannot be approximated 
  within $(n/8)$-factor using a graph cut function and raised the question of approximating them using hypergraph cut functions. 
  Our main result is that there exist symmetric submodular functions over $n$-element ground sets that cannot be approximated within a $o(n^{1/3}/\log^2 n)$-factor using a hypergraph cut function. On the positive side, we show that symmetrized concave linear functions and symmetrized rank functions of uniform matroids and partition matroids can be constant-approximated using hypergraph cut functions. 

---
id: ttp
show: [d]
title: Improved Approximation Algorithms for The Traveling Tournament Problem
authors: [Jingyang Zhao, Mingyu Xiao, Chao Xu]
type: conference
pub: MFCS
year: 2022
abstract: >
  The Traveling Tournament Problem (TTP) is a well-known benchmark problem in the field of tournament timetabling, which asks us to design a double round-robin schedule such that each pair of teams plays one game in each other's home venue, minimizing the total distance traveled by all $n$ teams ($n$ is even).
  TTP-$k$ is the problem with one more constraint that each team can have at most $k$ consecutive home games or away games. The case where $k=3$, TTP-3, is one of the most investigated cases. In this paper, we improve the approximation ratio of TTP-3 from $(1.667+\epsilon)$ to $(1.598+\epsilon)$, for any $\epsilon>0$. Previous schedules were constructed based on a Hamiltonian cycle of the graph.
  We propose a novel construction based on triangle packing. Then, by combining our triangle packing schedule with the Hamiltonian cycle schedule, we obtain the improved approximation ratio.
  The idea of our construction can also be extended to $k\geq 4$. We demonstrate that the approximation ratio of TTP-4 can be improved from $(1.750+\epsilon)$ to $(1.700+\epsilon)$ by the same method.
  As an additional product, we also improve the approximation ratio of LDTTP-3 (TTP-3 where all teams are allocated on a straight line) from $4/3$ to $(6/5+\epsilon)$.

---
id: parking
show: [d]
title: Marking Streets to Improve Parking Density
authors: [Steven Skiena, Chao Xu]
type: conference
pub: Urban Complex Systems
year: 2020
abstract: >
  Street parking spots for automobiles are a scarce commodity in most urban environments. The heterogeneity of car sizes makes it inefficient to rigidly define fixed-sized spots. Instead, unmarked streets in cities like New York leave placement decisions to individual drivers, who have no direct incentive to maximize street utilization. 
  In this paper, we explore the effectiveness of two different behavioral interventions designed to encourage better parking, namely (1) educational campaigns to encourage parkers to "kiss the bumper" and reduce the distance between themselves and their neighbors, or (2) painting appropriately-spaced markings on the street and urging drivers to "hit the line". Through analysis and simulation, we establish that the greatest densities are achieved when lines are painted to create spots roughly twice the length of average-sized cars. Kiss-the-bumper campaigns are in principle more effective than hit-the-line for equal degrees of compliance, although we believe that the visual cues of painted lines induce better parking behavior.

---
id: multicritera-cuts
title: Multicritera Cuts and Size-Constrained $k$-cuts in Hypergraphs
authors: [Calvin Beideman, Karthekeyan Chandrasekaran, Chao Xu]
type: conference
pub: RANDOM
year: 2020
show: [d]
notes:
  - The [journal version](#multicritera-cuts-journal) was serialized in Mathematical Programming. 
abstract: >
    We address counting and optimization variants of multicriteria global min-cut
    and size-constrained min-$k$-cut in hypergraphs.

    1. For an $r$-rank $n$-vertex hypergraph endowed with $t$ hyperedge-cost functions, we
    show that the number of multiobjective min-cuts is $O(r2^{tr}n^{3t−1})$. In particular, this
    shows that the number of parametric min-cuts in constant rank hypergraphs for a constant
    number of criteria is strongly polynomial, thus resolving an open question by
    Aissi, Mahjoub, McCormick, and Queyranne (Math Programming, 2015). In addition,
    we give randomized algorithms to enumerate all multiobjective min-cuts and all
    pareto-optimal cuts in strongly polynomial-time.

    2. We also address node-budgeted multiobjective min-cuts: For an $n$-vertex hypergraph endowed
    with t vertex-weight functions, we show that the number of node-budgeted multiobjective min-cuts
    is $O(r2^{r}nt+2)$, where $r$ is the rank of the hypergraph, and the number of node-budgeted
    $b$-multiobjective min-cuts for a fixed budget-vector $b$ is $O(n^2)$.

    3. We show that min-$k$-cut in hypergraphs subject to constant lower bounds on part sizes is
    solvable in polynomial-time for constant $k$, thus resolving an open problem posed by Queyranne.
    Our technique also shows that the number of optimal solutions is polynomial.

    All of our results build on the random contraction approach of Karger (SODA, 1993).
    Our techniques illustrate the versatility of the random contraction approach to address
    counting and algorithmic problems concerning multiobjective min-cuts and size-constrained
    $k$-cuts in hypergraphs.

---
id: kcut-revisited
title: LP Relaxation and Tree Packing for Minimum $k$-cuts
authors: [Chandra Chekuri, Kent Quanrud, Chao Xu]
type: conference
pub: SOSA
year: 2019
show: [d, p]
notes:
  - The [journal version](#kcut-revisited-journal) was serialized in SIAM Journal on Discrete Mathematics. 
abstract: >
  Karger used spanning tree packings to derive a near
  linear-time randomized algorithm for the global minimum cut problem
  as well as a bound on the number of approximate minimum cuts. This
  is a different approach from his well-known random contraction
  algorithm. Thorup developed a fast
  deterministic algorithm for the minimum $k$-cut
  problem via greedy _recursive_ tree packings.

  In this paper we revisit properties of an LP relaxation for $k$-cut
  proposed by Naor and Rabani, and analyzed by
  Chekuri, Guha and Naor.  We show that the dual of the LP yields a tree
  packing, that when combined with an upper bound on the integrality
  gap for the LP, easily and transparently extends Karger's analysis
  for mincut to the $k$-cut problem. In addition to the simplicity of
  the algorithm and its analysis, this allows us to improve the
  running time of Thorup's algorithm by a factor of $n$. We also
  improve the bound on the number of $\alpha$-approximate
  $k$-cuts. Second, we give a simple proof that the integrality gap of
  the LP is $2(1-1/n)$. Third, we show that an optimum solution to the
  LP relaxation, for all values of $k$, is fully determined by the
  principal sequence of partitions of the input graph. This allows us
  to relate the LP relaxation to the Lagrangean relaxation approach of
  Barahona and Ravi and Sinha; it also shows
  that the idealized recursive tree packing considered by Thorup gives
  an optimum dual solution to the LP. This work arose from an effort
  to understand and simplify the results of Thorup.

---

id: hypergraph-k-cut
show: [d,p]
title: Hypergraph $k$-Cut in Randomized Polynomial Time
authors: [Karthekeyan Chandrasekaran, Chao Xu, Xilin Yu]
type: conference
pub: SODA
year: 2018
notes:
  - The [journal version](#hypergraph-k-cut-journal) was serialized in Mathematical Programming. 
abstract: >
    In the hypergraph $k$-cut problem, the input is a hypergraph, and the goal is to find a smallest subset of hyperedges whose removal ensures that the remaining hypergraph has at least $k$ connected components. This problem is known to be at least as hard as the densest $k$-subgraph problem when k is part of the input ([Chekuri-Li, 2015](http://chekuri.cs.illinois.edu/papers/hypergraph-kcut.pdf)). We present a randomized polynomial time algorithm to solve the hypergraph $k$-cut problem for constant $k$.

    Our algorithm solves the more general hedge $k$-cut problem when the subgraph induced by every hedge has a constant number of connected components. In the hedge $k$-cut problem, the input is a hedgegraph specified by a vertex set and a disjoint set of hedges, where each hedge is a subset of edges defined over the vertices. The goal is to find a smallest subset of hedges whose removal ensures that the number of connected components in the remaining underlying (multi-)graph is at least $k$.

    Our algorithm is based on random contractions akin to Karger's min cut algorithm. Our main technical contribution is a distribution over the hedges (hyperedges) so that random contraction of hedges (hyperedges) chosen from the distribution succeeds in returning an optimum solution with large probability.

---
id: global-cuts-digraphs
show: [d,p]
title: Global and fixed-terminal cuts in digraphs
authors: [Kristóf Bérczi, Karthekeyan Chandrasekaran, Tamás Király, Euiwoong Lee, Chao Xu]
type: conference
pub: APPROX
year: 2017
notes:
  - The results on global bicut was serialized as [Beating the 2-approximation factor for global bicut](#global-bicut) in Mathematical Programming.
abstract: >
  The computational complexity of multicut-like problems may vary significantly depending on whether the terminals are fixed or not. In this work we present a comprehensive study of this phenomenon in two types of cut problems in directed graphs: double cut and bicut.
  
   - The fixed-terminal edge-weighted double cut is known to be solvable efficiently. We show a tight approximability factor of $2$ for the fixed-terminal node-weighted double cut. We show that the global node-weighted double cut cannot be approximated to a factor smaller than $\frac{3}{2}$ under the Unique Games Conjecture (UGC).
   - The fixed-terminal edge-weighted bicut is known to have a tight approximability factor of $2$. We show that the global edge-weighted bicut is approximable to a factor strictly better than $2$, and that the global node-weighted bicut cannot be approximated to a factor smaller than $\frac{3}{2}$ under UGC.
   - In relation to these investigations, we also prove two results on undirected graphs which are of independent interest. First, we show NP-completeness and a tight inapproximability bound of $\frac{4}{3}$ for the node-weighted $3$-cut problem. Second, we show that for constant $k$, there exists an efficient algorithm to solve the minimum $\{s,t\}$-separating $k$-cut problem.

  Our techniques for the algorithms are combinatorial, based on LPs and based on enumeration of approximate min-cuts. Our hardness results are based on combinatorial reductions and integrality gap instances.

---

id: subset-sum
show: [d,p]
title: A Faster Pseudopolynomial Time Algorithm for Subset Sum
authors: [Konstantinos Koiliaris, Chao Xu]
type: conference
pub: SODA
year: 2017
notes:
  - Not practical. [Discussion/implementation](https://gist.github.com/chaoxu/c9350bcdd4d7f44ca1a1d7e9c8c905d9).
  - Please see the ***[journal version](#subset-sum-journal)*** instead of this one. It combines with [Subset Sum Made Simple](https://arxiv.org/abs/1807.08248), features an additional $\tilde{O}(u^{5/4})$ time algorithm, and a unified and simplfied presentation. 
abstract: Given a multiset $S$ of $n$ positive integers and a target integer $t$, the subset sum problem is to decide if there is a subset of $S$ that sums up to $t$. We present a new divide-and-conquer algorithm that computes all the realizable subset sums up to an integer $u$ in $\tilde{O}\left(\min\{n\sqrt{u},u^{4/3},\sigma\}\right)$, where $\sigma$ is the sum of all elements in $S$ and $\tilde{O}$ hides polylogarithmic factors. This result improves upon the standard dynamic programming algorithm that runs in $O(nu)$ time. To the best of our knowledge, the new algorithm is the fastest general algorithm for this problem. We also present a modified algorithm for cyclic groups, which computes all the realizable subset sums within the group in $\tilde{O}\left(\min\{n\sqrt{m},m^{5/4}\}\right)$ time, where m is the order of the group.

---

id: hypergraph-min-cut-conf
show: [d,p]
title: Computing minimum cuts in hypergraphs
authors: [Chandra Chekuri, Chao Xu]
type: conference
pub: SODA
year: 2017
notes: 
  - The SODA camera ready version has a bug in the sparsification section that is fixed in the arXiv update.
  - The journal version with additional results was serialized as [Minimum cuts and sparsification in hypergraphs](#hypergraph-min-cut-journal) in SICOMP.
abstract: >
  We study algorithmic and structural aspects of connectivity in hypergraphs. Given a hypergraph $H=(V,E)$ with $n=|V|$, $m=|E|$ and $p=\sum_{e\in E}|e|$ the best known algorithm to compute a global minimum cut in $H$ runs in time $O(np)$ for the uncapacitated case and in $O(np+n^2\log n)$ time for the capacitated case. We show the following new results. 

  1. Given an uncapacitated hypergraph $H$ and an integer $k$ we describe an algorithm that runs in $O(p)$ time to find a subhypergraph $H'$ with sum of degrees $O(kn)$ that preserves all edge-connectivities up to $k$ (a $k$-sparsifier). This generalizes the corresponding result of Nagamochi and Ibaraki from graphs to hypergraphs. Using this sparsification we obtain an $O(p+\lambda n^2)$ time algorithm for computing a global minimum cut of $H$ where $\lambda$ is the minimum cut value.

  2. We generalize Matula's argument for graphs to hypergraphs and obtain a $(2+\e)$-approximation to the global minimum cut in a capacitated hypergraph in $O(\frac{1}{\e}(p+n \log n)\log n)$ time.

  3. We show that a hypercactus representation of all the global minimum cuts of a capacitated hypergraph can be computed in $O(np+n^2\log n)$ time and $O(p)$ space.

  We utilize vertex ordering based ideas to obtain our results. Unlike graphs we observe that there are several different orderings for hypergraphs which yield different insights.

---
id: elem-connectivity
title: On Element-Connectivity Preserving Graph Simplification
show: [d,p]
authors: [Chandra Chekuri, Thapanapong Rukkanchanunt, Chao Xu]
type: conference
pub: ESA
year: 2015
abstract: The notion of _element-connectivity_ has found several important applications in network design and routing problems. We focus on a reduction step that preserves the element-connectivity, which when applied repeatedly allows one to reduce the original graph to a simpler one. This pre-processing step is a crucial ingredient in several applications. In this paper we revisit this reduction step and provide a new proof via the use of setpairs. Our main contribution is algorithmic results for several basic problems on element-connectivity including the problem of achieving the aforementioned graph simplification. We utilize the underlying submodularity properties of element-connectivity to derive faster algorithms.

---
id: wspolygon
title: Detecting Weakly Simple Polygons
authors: [Hsien-Chih Chang, Jeff Erickson, Chao Xu]
type: conference
show: [d,p]
pub: SODA
year: 2015
dedication: Dedicated with thanks to our colleague [Ferran Hurtado](http://dccg.upc.edu/people/ferran/) (1951–2014).
abstract: A closed curve in the plane is weakly simple if it is the limit (in the Fréchet metric) of a sequence of simple closed curves. We describe an algorithm to determine whether a closed walk of length n in a simple plane graph is weakly simple in $O(n \log n)$ time, improving an earlier $O(n^3)$-time algorithm of [Cortese et al.](http://www.sciencedirect.com/science/article/pii/S0012365X07010680). As an immediate corollary, we obtain the first efficient algorithm to determine whether an arbitrary n-vertex polygon is weakly simple; our algorithm runs in $O(n^2 \log n)$ time. We also describe algorithms that detect weak simplicity in $O(n \log n)$ time for two interesting classes of polygons. Finally, we discuss subtle errors in several previously published definitions of weak simplicity.


# journal publications
---
id: sub4part-journal
title: A polynomial time algorithm for finding a minimum 4-partition of a submodular function
authors: [Tsuyoshi Hirayama, Yuhao Liu, Kazuhisa Makino, Ke Shi, Chao Xu]
type: journal
year: 2023
pub: MP
show: [d]
selected: true
abstract: >
  In this paper, we study the minimum $k$-partition problem of submodular functions, i.e., given a finite set $V$ 
  and a submodular function $f:2^V\to \mathbb{R}$, computing a $k$-partition $\{V_1,\ldots,V_k\}$ of $V$ 
  with minimum $\sum_{i=1}^k f(V_i)$. The problem is a natural generalization 
  of the minimum $k$-cut problem in graphs and hypergraphs. It is known that the problem is
  NP-hard for general $k$, and solvable in polynomial time for fixed $k\leq 3$. In this paper, we construct the first polynomial-time algorithm for 
  the minimum 4-partition problem.
notes:
  - An [extended abstract](#sub4part) of this work appeared in SODA 2023.

---
id: multicritera-cuts-journal
title: Multicritera Cuts and Size-Constrained $k$-cuts in Hypergraphs
authors: [Calvin Beideman, Karthekeyan Chandrasekaran, Chao Xu]
type: journal
pub: MP
year: 2021
show: [d]
selected: true
notes:
  - An [extended abstract](#multicritera-cuts) of this work appeared in RANDOM 2020.
abstract: >
  We address counting and optimization variants of multicriteria global min-cut and size-constrained min-$k$-cut in hypergraphs.

  1. For an $r$-rank $n$-vertex hypergraph endowed with $t$ hyperedge-cost functions, we show that the number of multiobjective 
  min-cuts is $O(r2^{tr}n^{3t−1})$. In particular, this shows that the number of parametric min-cuts in constant rank hypergraphs 
  for a constant number of criteria is strongly polynomial, thus resolving an open question by 
  Aissi et al. (Math Program 154(1–2):3–28, 2015). 
  In addition, we give randomized algorithms to enumerate all multiobjective min-cuts and all pareto-optimal cuts in 
  strongly polynomial-time.

  2. We also address node-budgeted multiobjective min-cuts: For an $n$-vertex hypergraph endowed with $t$ vertex-weight functions,
  we show that the number of node-budgeted multiobjective min-cuts is $O(r2^{r}nt+2)$, where $r$ is the rank of the hypergraph, 
  and the number of node-budgeted $b$-multiobjective min-cuts for a fixed budget-vector $b\in\R^t_{\geq 0}$ is $O(n^2)$.

  3. We show that min-$k$-cut in hypergraphs subject to constant lower bounds on part sizes is solvable in polynomial-time 
  for constant $k$, thus resolving an open problem posed by Guinez and Queyranne (Unpublished manuscript. . See also , 2012). 
  Our technique also shows that the number of optimal solutions is polynomial.

  All of our results build on the random contraction approach of Karger 
  (Proceedings of the 4th annual ACM-SIAM symposium on discrete algorithms, SODA, pp 21–30, 1993). 
  Our techniques illustrate the versatility of the random contraction approach to address counting
  and algorithmic problems concerning multiobjective min-cuts and size-constrained $k$-cuts in hypergraphs.
---
id: kdepots
show: [d,p]
title: High multiplicity asymmetric traveling salesman problem with feedback vertex set and its application to storage/retrieval system
authors: [Amir Gharehgozli, Chao Xu, Wenda Zhang]
type: journal
pub: EJOR
year: 2021
abstract: >
  We describe an algorithm for the high multiplicity asymmetric traveling salesman problem with feedback
  vertex set of size $k$ (HMTSPFVS-$k$FVS) where each vertex can be visited a certain number of times and each
  cycle in a solution contains at least one vertex from the feedback vertex set. We show how it can be
  used to improve algorithms in automated storage and retrieval systems.
  An automated storage and retrieval system includes storage blocks and storage and retrieval machines
  that either move to retrieve unit loads from their current locations in the system to a depot or take
  unit loads from a depot and store them to specific locations in the system.
  Given $n$ storage and retrieval requests in a system with $k$ depots and one storage and retrieval machine,
  we show that our algorithm for HMTSPFVS-$k$FVS can solve the problem of minimizing total traveling time of
  the storage and retrieval machine in $O(n^k+n^3)$ time when all depots are specialized (each depot fulfills
  one type of requests) and in $O(n^{2k}+n^3)$ time when depots are regular (each depot fulfills both types of
  requests).
  The best previous algorithm only solves the special case of the problem with $2$ regular depots in $O(n^6)$ time.
  The applicability of our algorithm for several generalizations and special cases of the problem is also discussed.
  Furthermore, to evaluate the performance of our solution method, we perform extensive numerical experiments.
--- 
id: min-violation
show: [d,p]
title: Minimum violation vertex maps and their applications to cut problems
type: journal
year: 2020
authors: [Ken-ichi Kawarabayashi, Chao Xu]
pub: SIDMA
selected: true
abstract: >
  The minimum violation problem asks for a vertex map from a digraph to a pattern digraph that minimizes violation, 
  the total weight of the edges not mapped to an edge. We are interested in surjective mappings. We characterize all
  patterns where a minimum violation map that fixes some vertices can be computed in polynomial time. We also make
  progress in the case where we do not fix any vertex in the mapping, including when the digraph is disconnected,
  when the graph is in the variety of finite paths. Moreover, we obtain a dichotomy result for trees. We apply
  the result to some cut problems, including $k$-cut with size lower bounds and length bounded $k$-cuts.

---
id: kcut-revisited-journal
title: LP Relaxation and Tree Packing for Minimum $k$-Cut
authors: [Chandra Chekuri, Kent Quanrud, Chao Xu]
type: journal
pub: SIDMA
year: 2020
show: [d]
selected: true
notes:
  - An [extended abstract](#kcut-revisited) of this work appeared in SOSA 2019.
abstract: >
    Karger used spanning tree packings [D. R. Karger, J. ACM, 47 (2000), pp. 46--76] to derive a near
    linear-time randomized algorithm for the global minimum cut problem as well as a bound on the number
    of approximate minimum cuts. This is a different approach from his well-known random contraction
    algorithm [D. R. Karger, Random Sampling in Graph Optimization Problems, Ph.D. thesis, Stanford
    University, Stanford, CA, 1995, D. R. Karger and C. Stein, J. ACM, 43 (1996), pp. 601--640].
    Thorup developed a fast deterministic algorithm for the minimum $k$-cut problem via greedy
    recursive tree packings [M. Thorup, Minimum $k$-way cuts via deterministic greedy tree packing,
    in Proceedings of the Fortieth Annual ACM Symposium on Theory of Computing, ACM, 2008, pp. 159--166].

    In this paper we revisit properties of an LP relaxation for cͅut proposed by Naor and Rabani
    [Tree packing and approximating $k$-cuts, in Proceedings of the Twelfth Annual ACM-SIAM Symposium
    on Discrete Algorithms, Vol. 103, SIAM, Philadelphia, 2001, pp. 26--27], and analyzed in
    [C. Chekuri, S. Guha, and J. Naor, SIAM J. Discrete Math., 20 (2006), pp. 261--271].
    We show that the dual of the LP yields a tree packing that, when combined with an upper bound
    on the integrality gap for the LP, easily and transparently extends Karger's analysis for mincut
    to the $k$-cut problem. In addition to the simplicity of the algorithm and its analysis, this allows us
    to improve the running time of Thorup's algorithm by a factor of $n$. We also improve the bound on the number
    of $\alpha$-approximate $k$-cuts. Second, we give a simple proof that the integrality gap of the LP is $2(1-1/n)$.
    Third, we show that an optimum solution to the LP relaxation, for all values of $k$, is fully determined by the
    principal sequence of partitions of the input graph. This allows us to relate the LP relaxation to the
    Lagrangean relaxation approach of Barahona [Oper. Res. Lett., 26 (2000), pp. 99--105] and Ravi and
    Sinha [European J. Oper. Res., 186 (2008), pp. 77--90]; it also shows that the idealized recursive
    tree packing considered by Thorup gives an optimum dual solution to the LP.

---
id: hypergraph-k-cut-journal
show: [d,p]
title: Hypergraph $k$-Cut in Randomized Polynomial Time
authors: [Karthekeyan Chandrasekaran, Chao Xu, Xilin Yu]
type: journal
pub: MP
year: 2019
selected: true
notes:
  - An [extended abstract](#hypergraph-k-cut) of this work appeared in SODA 2018.
abstract: >
    For a fixed integer $k\geq 2$, the hypergraph $k$-cut problem asks for a smallest subset 
    of hyperedges whose removal leads to at least $k$ connected components in the remaining 
    hypergraph. While graph $k$-cut is solvable efficiently (Goldschmidt and Hochbaum in Math. 
    Oper. Res. 19(1):24–37, 1994), the complexity of hypergraph $k$-cut has been open. In this 
    work, we present a randomized polynomial time algorithm to solve the hypergraph $k$-cut 
    problem. Our algorithmic technique extends to solve the more general hedge $k$-cut problem 
    when the subgraph induced by every hedge has a constant number of connected components. 
    Our algorithm is based on random contractions akin to Karger’s min cut algorithm. 
    Our main technical contribution is a non-uniform distribution over the hedges (hyperedges) 
    so that random contraction of hedges (hyperedges) chosen from the distribution succeeds in 
    returning an optimum solution with large probability. In addition, we present an alternative 
    contraction based randomized polynomial time approximation scheme for hedge $k$-cut in arbitrary 
    hedgegraphs (i.e., hedgegraphs whose hedges could have a large number of connected components).
    Our algorithm and analysis also lead to bounds on the number of optimal solutions to the 
    respective problems.

---
id: subset-sum-journal
title: Faster Pseudopolynomial Time Algorithms for Subset Sum
authors: [Konstantinos Koiliaris, Chao Xu]
type: journal
show: [d]
pub: TALG
year: 2019
selected: true
notes:
  - The paper is a combination of [A Faster Pseudopolynomial Time Algorithm for Subset Sum](#subset-sum) appeared in SODA 2017 and [Subset Sum Made Simple](https://arxiv.org/abs/1807.08248). This full version among other additions, simplifies the $\tilde{O}(\sqrt{n}u)$ time algorithm and improves the bound from $\tilde{O}(u^{4/3})$ to $\tilde{O}(u^{5/4})$ time.
  - An implementation of the simple algorithm can be found [here](https://gist.github.com/chaoxu/a5e3b353d9501ddb93e3c24213acd2eb).
abstract: >
  Given a (multi) set $S$ of $n$ positive integers and a target integer $u$, the subset sum problem is 
  to decide if there is a subset of $S$ that sums up to $u$. We present a series of new algorithms that 
  compute and return <emph>all</emph> the realizable subset sums up to the integer $u$ in 
  $\tilde{O}(\min\{\sqrt{n}u,u^{5/4},\sigma\})$, where $\sigma$ is the sum of all elements of $S$ 
  and $\tilde{O}$ hides polylogarithmic factors. We also present a modified algorithm for integers 
  modulo $m$, which computes all the realizable subset sums modulo $m$ in $\tilde{O}(\min \{\sqrt{n}m,m^{5/4}\})$ time. 

  Our contributions improve upon the standard dynamic programming algorithm that runs in $O(nu)$ time. To the 
  best of our knowledge, the new algorithms are the fastest deterministic algorithms for this problem. The new
  results can be employed in various algorithmic problems, from graph bipartition to computational social choice.
  Finally, we also improve a result on covering $\Z_m$, which might be of independent interest. 

---
id: global-bicut
show: [d]
title: Beating the 2-approximation factor for global bicut
authors: [Kristóf Bérczi, Karthekeyan Chandrasekaran, Tamás Király, Euiwoong Lee, Chao Xu]
type: journal
pub: MP
year: 2019
selected: true
notes:
  - The preliminary version [Global and fixed-terminal cuts in digraphs](#global-cuts-digraphs) appeared in APPROX 2017.
abstract: In the fixed-terminal bicut problem, the input is a directed graph with two specified nodes $s$ and $t$ and the goal is to find a smallest subset of edges whose removal ensures that $s$ cannot reach $t$ and $t$ cannot reach $s$. In the global bicut problem, the input is a directed graph and the goal is to find a smallest subset of edges whose removal ensures that there exist two nodes $s$ and $t$ such that $s$ cannot reach $t$ and $t$ cannot reach $s$. Fixed-terminal bicut and global bicut are natural extensions of  $\{s,t\}$-min cut and global min-cut respectively, from undirected graphs to directed graphs. Fixed-terminal bicut is NP-hard, admits a simple $2$-approximation, and does not admit a  $(2-\e)$-approximation for any constant  $\e>0$ assuming the unique games conjecture. In this work, we show that global bicut admits a $(2-1/448)$-approximation, thus improving on the approximability of the global variant in comparison to the fixed-terminal variant.

---
id: hypergraph-min-cut-journal
title: Minimum cuts and sparsification in hypergraphs
authors: [Chandra Chekuri, Chao Xu]
type: journal
show: [d]
pub: SICOMP
year: 2018
selected: true
notes:
  - The paper is a combination of [Computing minimum cuts in hypergraphs](#hypergraph-min-cut-conf) appeared in SODA 2017 and [A note on approximate strengths of edges in a hypergraph](https://arxiv.org/abs/1703.03849).
abstract: >
  We study algorithmic and structural aspects of connectivity in
  hypergraphs. Given a hypergraph $H=(V,E)$ with $n = |V|$, $m = |E|$
  and $p = \sum_{e \in E} |e|$ the fastest known algorithm to compute a
  global minimum cut in $H$ runs in $O(np)$ time for the uncapacitated
  case, and in $O(np + n^2 \log n)$ time for the capacitated case. We show
  the following new results.
   - Given an uncapacitated hypergraph $H$ and an integer $k$ we
        describe an algorithm that runs in $O(p)$ time to find a (trimmed)
        subhypergraph $H'$ with sum of degrees $O(kn)$ that preserves all
        edge-connectivities up to $k$ (a $k$-sparse certificate). This
        generalizes the corresponding result of Nagamochi and Ibaraki from
        graphs to hypergraphs. Using this sparsification we obtain an $O(p + \lambda n^2)$ time algorithm for computing a global minimum cut of
        $H$ where $\lambda$ is the minimum cut value.
   - We show that a hypercactus representation of <em>all</em> the
        global minimum cuts of a capacitated hypergraph can be computed in
        $O(np + n^2 \log n)$ time and $O(p)$ space matching the asymptotic
        time to find a single minimum cut.
   - We obtain a $(2+\e)$-approximation to the global minimum cut
        of a capacitated hypergraph in $O(\frac{1}{\e} (p \log n + n \log^2 n))$
        time, and for uncapacitated hypergraphs in $O(p/\e)$ time.
        We achieve this by generalizing Matula's algorithm for
        graphs to hypergraphs.
   - We describe an algorithm to compute approximate strengths of
    all the edges of a hypergraph in $O(p \log^2 n \log p)$ time. This
    gives a near linear time algorithm for finding a $(1+\e)$-cut
    sparsifier based on the work of Kogan and Krauthgamer. As a
    byproduct we obtain faster algorithms for various cut and flow
    problems in hypergraphs of small rank.

  Our results build upon properties of vertex orderings that were
  inspired by the maximum adjacency ordering for graphs due to
  Nagamochi and Ibaraki.  Unlike graphs we observe that there are
  several orderings for hypergraphs and these yield different
  insights.

---
id: kinship
title: The shortest kinship description problem
show: [d, p]
authors: [Chao Xu, Qian Zhang]
type: journal
pub: IPL
year: 2018
dedication: To the memories of Jiaqi Zhao(1994-2016)
abstract: We consider a problem in descriptive kinship systems, namely finding the shortest sequence of terms that describes the kinship between a person and his/her relatives. The problem reduces to finding the minimum weight path in a labeled graph where the label of the path comes from a regular language. The running time of the algorithm is $O(n^3+s)$, where $n$ and $s$ are the input size and the output size of the algorithm, respectively.

--- 
id: edgedisjoint
show: [d]
title: Reconstructing edge-disjoint paths faster
authors: [Chao Xu]
type: journal
pub: ORL
year: 2016
abstract: For a simple undirected graph with $n$ vertices and $m$ edges, we consider a data structure that given a query of a pair of vertices $u$, $v$ and an integer $k\geq 1$, it returns $k$ edge-disjoint $uv$-paths. The data structure takes $\tilde{O}(n^{3.375})$ time to build, using $O(mn^{1.5}\log n)$ space, and each query takes $O(kn)$ time, which is optimal and beats the previous query time of $O(kn\alpha(n))$.

--- 
id: spider
show: [d]
title: Champion spiders in the game of Graph Nim
authors: [Neil J. Calkin, Janine E. Janoski, Allison Nelson, Sydney Ryan, Chao Xu]
type: journal
pub: Congr. Numer.
year: 2013
abstract: >
  In the game of Graph Nim, players take turns removing one or more edges incident
  to a chosen vertex in a graph. The player that removes the last edge in the graph
  wins. A spider graph is a champion if it has a Sprague-Grundy number equal to the
  number of edges in the graph. We investigate the the Sprague-Grundy numbers of
  various spider graphs when the number of paths or length of paths increase.



# manuscripts

---
id: airplane
title: A near-linear time algorithm for computing the optimal landing times of a fixed sequence of planes
type: manuscript
year: 2019
bib: <time>2019</time>, Submitted.
authors: [Bin Cao, Chao Xu]

---
id: milk
show: [d]
title: An algorithm for the metric multiple depots capacitated vehicle routing problem with restocking and capacity two
authors: [Chao Xu, Yichen Yang, Qian Zhang]
type: manuscript
year: 2019
bib: 2019, Submitted.
abstract: >
  The capacitated vehicle routing problem (CVRP) is one of the most well known NP-hard combinatorial optimization problems. Single depot CVRP with a general metric is NP-hard even for fixed capacity 3, while polynomial time solvable for fixed capacity 2. We consider the variant of CVRP where restocking is available.
  We show that if there is a constant number of depots, then the problem can be solved in polynomial time when capacity is $2$.


# --- 
# id: subset-sum-simple
# show: [d]
# title: Subset Sum Made Simple
# authors: [Konstantinos Koiliaris, Chao Xu]
# type: manuscript
# year: 2018
# abstract: >
#   Subset Sum is a classical optimization problem taught to undergraduates as an
#   example of an NP-hard problem, which is amenable to dynamic programming,
#   yielding polynomial running time if the input numbers are relatively small.
#   Formally, given a set $S$ of $n$ positive integers and a target integer $t$,
#   the Subset Sum problem is to decide if there is a subset of $S$ that sums up to
#   $t$. Dynamic programming yields an algorithm with running time $O(nt)$.
#   Recently, the authors [[Koiliaris & Xu SODA '17](https://doi.org/10.1137/1.9781611974782.68)] improved the running time to
#   $\tilde{O}\bigl(\sqrt{n}t\bigr)$, and it was further improved to
#   $\tilde{O}\bigl(n+t\bigr)$ by a somewhat involved randomized algorithm by
#   Bringmann [[Bringmann SODA '17](https://doi.org/10.1137/1.9781611974782.69)], where $\tilde{O}$ hides polylogarithmic factors.

#   Here, we present a new and significantly simpler algorithm with running time
#   $\tilde{O}\bigl(\sqrt{n}t\bigr)$. While not the fastest, we believe the new
#   algorithm and analysis are simple enough to be presented in an algorithms
#   class, as a striking example of a divide-and-conquer algorithm that uses FFT to
#   a problem that seems (at first) unrelated. In particular, the algorithm and its
#   analysis can be described in full detail in two pages (see pages 3-5).

---
id: thesis
show: [d,q]
title: Cuts and Connectivity in Graphs and Hypergraphs
authors: [Chao Xu]
type: thesis
year: 2018
notes:
  - Nominated for the [ACM Doctoral Dissertation Award](https://awards.acm.org/doctoral-dissertation) by Department of Computer Science at UIUC.
dedication: Co-advised by [Karthik Chandrasekaran](http://karthik.ise.illinois.edu/) and [Chandra Chekuri](http://chekuri.cs.illinois.edu/).
abstract: >
  In this thesis, we consider cut and connectivity problems on graphs, digraphs, hypergraphs and hedgegraphs.
  The main results are the following:
    - We introduce a faster algorithm for finding the reduced graph in element-connectivity computations. We also show its application to node separation.
    - We present several results on hypergraph cuts, including (a) a near linear time algorithm for finding a (2 + ε)-approximate min-cut, (b) an algorithm to find a representation of all min-cuts in the same time as finding a single min-cut, (c) a sparse subgraph that preserves connectivity for hypergraphs and (d) a near linear-time hypergraph cut sparsifier.
    - We design the first randomized polynomial time algorithm for the hypergraph $k$-cut problem whose complexity has been open for over 20 years. The algorithm generalizes to hedgegraphs with constant span.
    - We address the complexity gap between global vs. fixed-terminal cuts problems in digraphs by presenting a $2-\frac{1}{448}$ approximation algorithm for the global bicut problem.
# thesis

